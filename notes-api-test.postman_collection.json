{
	"info": {
		"_postman_id": "eef41bb7-6bde-419a-bd2d-70f5317dd786",
		"name": "Notes API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14132762"
	},
	"item": [
		{
			"name": "Adding Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response status code should have 201 value', () => {",
							"   pm.response.to.have.status(201);",
							"});",
							"pm.test('response Content-Type header should have application/json value', () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json; charset=utf-8');",
							"});",
							"pm.test('response body should be an object', () => {",
							"   const responseJson = pm.response.json();",
							"   pm.expect(responseJson).to.be.an('object');",
							"});",
							"pm.test('response body should have correct property and value', () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.ownProperty('status');",
							"    pm.expect(responseJson.status).to.equals('success');",
							"    pm.expect(responseJson).to.ownProperty('message');",
							"    pm.expect(responseJson.message).to.equals('Catatan berhasil ditambahkan');",
							"    pm.expect(responseJson).to.ownProperty('data');",
							"    pm.expect(responseJson.data).to.be.an('object');",
							"});",
							"",
							"pm.test('response body data should have noteId property and not equal to empty', () => {",
							"    const responseJson = pm.response.json();",
							"    const { data } = responseJson;",
							"",
							"    pm.expect(data).to.ownProperty('noteId');",
							"    pm.expect(data.noteId).to.not.equals('');",
							"",
							"    pm.environment.set('noteId', data.noteId);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Catatan A\",\n    \"tags\": [\"Android\", \"Web\"],\n    \"body\": \"Isi dari catatan A\"\n}"
				},
				"url": {
					"raw": "127.0.0.1:5000/notes",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"notes"
					]
				}
			},
			"response": [
				{
					"name": "201 OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Catatan A\",\n    \"tags\": [\"Android\", \"Web\"],\n    \"body\": \"Isi dari catatan A\"\n}"
						},
						"url": {
							"raw": "127.0.0.1:5000/notes",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"notes"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "vary",
							"value": "origin"
						},
						{
							"key": "access-control-expose-headers",
							"value": "WWW-Authenticate,Server-Authorization"
						},
						{
							"key": "cache-control",
							"value": "no-cache"
						},
						{
							"key": "content-length",
							"value": "98"
						},
						{
							"key": "Date",
							"value": "Sun, 10 Dec 2023 11:13:23 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Catatan berhasil ditambahkan\",\n    \"data\": {\n        \"noteId\": \"O2hfvjIkd4GI8K-p\"\n    }\n}"
				}
			]
		},
		{
			"name": "Getting All Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response status code should have 200 value', () => {",
							"  pm.response.to.have.status(200);",
							"}); ",
							"pm.test('response Content-Type header should have application/json value', () => {",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json; charset=utf-8');",
							"});",
							"pm.test('response body should be an object', () => {",
							"   const responseJson = pm.response.json();",
							"   pm.expect(responseJson).to.be.an('object');",
							"});",
							"pm.test('response body should have the correct property and value', () => {",
							"   const responseJson = pm.response.json();",
							" ",
							"   pm.expect(responseJson).to.have.property('status');",
							"   pm.expect(responseJson.status).to.equals('success'); ",
							"   pm.expect(responseJson).to.have.property('data');",
							"   pm.expect(responseJson.data).to.be.an('object');",
							"}); ",
							"",
							"",
							"pm.test('response body data should have a notes array and contain at least 1 item', () => {",
							"   const responseJson = pm.response.json();",
							"   const { data } = responseJson;",
							" ",
							"   pm.expect(data).to.have.ownProperty('notes');",
							"   pm.expect(data.notes).to.be.an('array');",
							"   pm.expect(data.notes).lengthOf.at.least(1);",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/notes",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"notes"
					]
				}
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "127.0.0.1:5000/notes",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"notes"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "vary",
							"value": "origin"
						},
						{
							"key": "access-control-expose-headers",
							"value": "WWW-Authenticate,Server-Authorization"
						},
						{
							"key": "cache-control",
							"value": "no-cache"
						},
						{
							"key": "content-length",
							"value": "424"
						},
						{
							"key": "accept-ranges",
							"value": "bytes"
						},
						{
							"key": "Date",
							"value": "Sun, 10 Dec 2023 11:13:40 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"notes\": [\n            {\n                \"id\": \"CWygoZyVZCI1LGV5\",\n                \"createdAt\": \"2023-12-10T11:03:48.700Z\",\n                \"updatedAt\": \"2023-12-10T11:03:48.700Z\"\n            },\n            {\n                \"id\": \"EbKoCKRr6xc8wd-o\",\n                \"createdAt\": \"2023-12-10T11:08:48.609Z\",\n                \"updatedAt\": \"2023-12-10T11:08:48.609Z\"\n            },\n            {\n                \"title\": \"Catatan A\",\n                \"tags\": [\n                    \"Android\",\n                    \"Web\"\n                ],\n                \"body\": \"Isi dari catatan A\",\n                \"id\": \"O2hfvjIkd4GI8K-p\",\n                \"createdAt\": \"2023-12-10T11:13:23.693Z\",\n                \"updatedAt\": \"2023-12-10T11:13:23.693Z\"\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Get Specified Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response status code should have 200 value', () => {",
							"  pm.response.to.have.status(200);",
							"}); ",
							"pm.test('response Content-Type header should have application/json value', () => {",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json; charset=utf-8');",
							"});",
							"pm.test('response body should be an object', () => {",
							"   const responseJson = pm.response.json();",
							"   pm.expect(responseJson).to.be.an('object');",
							"});",
							"pm.test('response body should have the correct property and value', () => {",
							"   const responseJson = pm.response.json();",
							" ",
							"   pm.expect(responseJson).to.have.ownProperty('status');",
							"   pm.expect(responseJson.status).to.equals('success');",
							"   pm.expect(responseJson).to.have.ownProperty('data');",
							"   pm.expect(responseJson.data).to.be.an('object');",
							"}); ",
							"",
							"pm.test('response body data should contain note object', () => {",
							"   const responseJson = pm.response.json();",
							"   const { data } = responseJson;",
							" ",
							"   pm.expect(data).to.have.ownProperty('note');",
							"   pm.expect(data.note).to.be.an('object');",
							"}); ",
							"",
							"pm.test('note object should contain correct value for id, title, body, and tags property', () => {",
							"   const responseJson = pm.response.json();",
							"   const { data: { note } } = responseJson;",
							"   const expectedId = pm.environment.get('noteId');",
							"   const expectedTitle = 'Catatan A';",
							"   const expectedTags = ['Android', 'Web'];",
							"   const expectedBody = 'Isi dari catatan A';",
							"   pm.expect(note).to.have.ownProperty('id');",
							"   pm.expect(note.id).to.equals(expectedId);",
							"",
							"   pm.expect(note).to.have.ownProperty('title');",
							"   pm.expect(note.title).to.equals(expectedTitle);",
							"",
							"   pm.expect(note).to.have.ownProperty('tags');",
							"   pm.expect(note.tags).to.eql(expectedTags);",
							"",
							"   pm.expect(note).to.have.ownProperty('body');",
							"   pm.expect(note.body).to.equals(expectedBody);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/notes/{{noteId}}",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"notes",
						"{{noteId}}"
					]
				}
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "127.0.0.1:5000/notes/O2hfvjIkd4GI8K-p",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"notes",
								"O2hfvjIkd4GI8K-p"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "vary",
							"value": "origin"
						},
						{
							"key": "access-control-expose-headers",
							"value": "WWW-Authenticate,Server-Authorization"
						},
						{
							"key": "cache-control",
							"value": "no-cache"
						},
						{
							"key": "content-length",
							"value": "212"
						},
						{
							"key": "accept-ranges",
							"value": "bytes"
						},
						{
							"key": "Date",
							"value": "Sun, 10 Dec 2023 11:40:18 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"succes\",\n    \"data\": {\n        \"note\": {\n            \"title\": \"Catatan A\",\n            \"tags\": [\n                \"Android\",\n                \"Web\"\n            ],\n            \"body\": \"Isi dari catatan A\",\n            \"id\": \"O2hfvjIkd4GI8K-p\",\n            \"createdAt\": \"2023-12-10T11:13:23.693Z\",\n            \"updatedAt\": \"2023-12-10T11:13:23.693Z\"\n        }\n    }\n}"
				},
				{
					"name": "404 Nout found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "127.0.0.1:5000/notes/AAAA",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"notes",
								"AAAA"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "vary",
							"value": "origin"
						},
						{
							"key": "access-control-expose-headers",
							"value": "WWW-Authenticate,Server-Authorization"
						},
						{
							"key": "cache-control",
							"value": "no-cache"
						},
						{
							"key": "content-length",
							"value": "53"
						},
						{
							"key": "Date",
							"value": "Sun, 10 Dec 2023 11:41:43 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"fail\",\n    \"message\": \"Catatan tidak ditemukan\"\n}"
				}
			]
		},
		{
			"name": "Update Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response status code should have 200 value', () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('response Content-Type header should have application/json value', () => {",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.equals(\"application/json; charset=utf-8\");",
							"});",
							"pm.test('response body should be an object', () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.be.an('object');",
							"});",
							"pm.test('response body should have correct property and value', () => {",
							"   const responseJson = pm.response.json();",
							" ",
							"   pm.expect(responseJson).to.have.ownProperty('status');",
							"   pm.expect(responseJson.status).to.equals('success');",
							"   pm.expect(responseJson).to.have.ownProperty('message');",
							"   pm.expect(responseJson.message).to.equals('Catatan berhasil diperbarui');",
							"});",
							"",
							"pm.test('when request the updated note', () => {",
							"   const noteId = pm.environment.get('noteId');",
							"   pm.sendRequest(`http://127.0.0.1:5000/notes/${noteId}`, (error, response) => {",
							"        if(!error) {",
							"            pm.test('then the updated note should contain the latest data', () => {",
							"                const responseJson = response.json();",
							"                const { data: { note } } = responseJson;",
							" ",
							"                const expectedTitle = 'Catatan A Revised';",
							"                const expectedTags = ['Android', 'Web'];",
							"                const expectedBody = 'Isi dari Catatan A Revised';",
							"",
							"                pm.expect(note.title).to.equals(expectedTitle);",
							"                pm.expect(note.tags).to.eql(expectedTags);",
							"                pm.expect(note.body).to.equals(expectedBody);",
							"            });",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Catatan A Revised\",\n    \"tags\": [\"Android\", \"Web\"],\n    \"body\": \"Isi dari Catatan A Revised\"\n}"
				},
				"url": {
					"raw": "127.0.0.1:5000/notes/{{noteId}}",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"notes",
						"{{noteId}}"
					]
				}
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"title\": \"Catatan A Revisi\",\n   \"tags\": [\"Android\", \"Web\"],\n   \"body\": \"Isi dari catatan A revisi\"\n}"
						},
						"url": {
							"raw": "127.0.0.1:5000/notes/O2hfvjIkd4GI8K-p",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"notes",
								"O2hfvjIkd4GI8K-p"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "vary",
							"value": "origin"
						},
						{
							"key": "access-control-expose-headers",
							"value": "WWW-Authenticate,Server-Authorization"
						},
						{
							"key": "cache-control",
							"value": "no-cache"
						},
						{
							"key": "content-length",
							"value": "62"
						},
						{
							"key": "Date",
							"value": "Sun, 10 Dec 2023 11:44:09 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Catatan berhasil diperbaharui\"\n}"
				}
			]
		},
		{
			"name": "Delete Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response status code should have 200 value', () => {",
							"   pm.response.to.have.status(200);",
							"});",
							"pm.test('response Content-Type header should have application/json value', () => {",
							"   pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json; charset=utf-8')",
							"}); ",
							"pm.test('response body should be an object', () => {",
							"   const responseJson = pm.response.json();",
							"   pm.expect(responseJson).to.be.an('object');",
							"});",
							"",
							"pm.test('response body should have correct property and value', () => {",
							"   const responseJson = pm.response.json();",
							" ",
							"   pm.expect(responseJson).to.have.ownProperty('status');",
							"   pm.expect(responseJson.status).to.equals('success');",
							"   pm.expect(responseJson).to.have.ownProperty('message');",
							"   pm.expect(responseJson.message).to.equals('Catatan berhasil dihapus');",
							"}); ",
							"",
							"pm.test('when request the deleted note', () => {",
							"    const noteId = pm.environment.get('noteId');",
							"    pm.sendRequest(`http://127.0.0.1:5000/notes/${noteId}`, (error, response) => {",
							"        if(!error) {",
							"            pm.test('the deleted note should be not found', () => {",
							"                pm.expect(response.code).to.equals(404);",
							"",
							"                const responseJson = response.json();",
							"                pm.expect(responseJson.status).to.equals('fail');",
							"                pm.expect(responseJson.message).to.equals('Catatan tidak ditemukan');",
							"            });",
							"        }",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "127.0.0.1:5000/notes/{{noteId}}",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"notes",
						"{{noteId}}"
					]
				}
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "127.0.0.1:5000/notes/CWygoZyVZCI1LGV5",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"notes",
								"CWygoZyVZCI1LGV5"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "content-type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "vary",
							"value": "origin"
						},
						{
							"key": "access-control-expose-headers",
							"value": "WWW-Authenticate,Server-Authorization"
						},
						{
							"key": "cache-control",
							"value": "no-cache"
						},
						{
							"key": "content-length",
							"value": "57"
						},
						{
							"key": "Date",
							"value": "Sun, 10 Dec 2023 11:46:26 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Catatan berhasil dihapus\"\n}"
				}
			]
		}
	]
}